# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - retailedge

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        run: |
          cd client
          npm ci

      - name: Cache frontend build
        uses: actions/cache@v4
        with:
          path: client/.next
          key: ${{ runner.os }}-frontend-build-${{ hashFiles('client/**/*.{js,ts,tsx,jsx,json}') }}
          restore-keys: |
            ${{ runner.os }}-frontend-build-

      - name: Build frontend
        run: |
          cd client
          npm run build
          echo "Frontend build completed. Checking out directory:"
          ls -la out/ || echo "out directory not found in client"
          echo "Contents of out directory:"
          ls -la out/ 2>/dev/null || echo "Could not list out directory"

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: |
          cd server
          npm ci

      - name: Cache Prisma client
        uses: actions/cache@v4
        with:
          path: server/node_modules/.prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('server/prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Build backend
        run: |
          cd server
          npm run build
          # Generate Prisma client for production
          npx prisma generate

      - name: Copy frontend build to backend
        run: |
          # Copy the static export to server/out
          echo "Copying frontend build to backend..."
          cp -r client/out server/
          echo "Checking if copy was successful:"
          ls -la server/out/ || echo "server/out directory not found"
          echo "Contents of server/out:"
          ls -la server/out/ 2>/dev/null || echo "Could not list server/out directory"

      - name: Create node_modules.tar.gz for Azure
        run: |
          cd server
          tar -czf ../node_modules.tar.gz node_modules/

      - name: Create deployment package
        run: |
          # Create a deployment directory
          mkdir -p deployment
          
          # Copy server contents to deployment root
          cp -r server/* deployment/
          
          # Copy the node_modules.tar.gz to deployment root (Azure expects this)
          cp node_modules.tar.gz deployment/
          
          # Copy deploy.sh to deployment root
          cp deploy.sh deployment/
          
          # Ensure out directory exists in deployment
          ls -la deployment/
          echo "Checking if out directory exists:"
          ls -la deployment/out/ || echo "out directory not found"

      - name: Zip deployment package
        run: |
          cd deployment
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C425DEAD412C4E23A656C568F59C742F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4F197AA1B2764367A9B0FA9A6DAE7EB1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8BA2E0A1349D4200956BF8EAC5A14B8F }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'retailedge'
          slot-name: 'Production'
          package: .
          