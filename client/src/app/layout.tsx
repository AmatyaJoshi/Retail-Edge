import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ClientLayout from "./ClientLayout";
import ReactQueryProvider from "./providers/ReactQueryProvider";
import { Toaster } from "./components/ui/toaster";
import ConditionalAIAssistant from "./components/ConditionalAIAssistant";
import { AIAssistantProvider } from "./contexts/AIAssistantContext";
import { PageDataProvider } from "./contexts/PageDataContext";
import { ClerkProvider } from '@clerk/nextjs';
import { NextIntlClientProvider } from 'next-intl';
import { getLocale } from 'next-intl/server';
import ReduxProvider from './providers/ReduxProvider';
import DarkModeSync from './components/DarkModeSync';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Retail Edge",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return [
    { locale: 'en' }, { locale: 'hi' }, { locale: 'mr' }, { locale: 'bn' }, { locale: 'gu' }, { locale: 'ta' }, { locale: 'te' }, { locale: 'kn' }, { locale: 'ml' }, { locale: 'pa' }, { locale: 'ur' }, { locale: 'or' }, { locale: 'as' }, { locale: 'sa' }, { locale: 'es' }, { locale: 'fr' }, { locale: 'de' }, { locale: 'it' }, { locale: 'ja' }, { locale: 'ko' }
  ];
}

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const locale = await getLocale();
  const messages = (await import(`./messages/${locale}.json`)).default;
  return (
    <ClerkProvider>
      <html lang={locale}>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <ReduxProvider>
            <DarkModeSync />
            <NextIntlClientProvider locale={locale} messages={messages}>
              <ReactQueryProvider>
                <PageDataProvider>
                  <AIAssistantProvider>
                    <ClientLayout>
                      {children}
                    </ClientLayout>
                    <ConditionalAIAssistant />
                  </AIAssistantProvider>
                </PageDataProvider>
                <Toaster />
              </ReactQueryProvider>
            </NextIntlClientProvider>
          </ReduxProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
